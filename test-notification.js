// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const TelegramBot = require('node-telegram-bot-api');

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';
const CHAT_ID = process.env.TEST_CHAT_ID || 'YOUR_CHAT_ID_HERE';

if (!BOT_TOKEN || BOT_TOKEN === 'YOUR_BOT_TOKEN_HERE') {
  console.error('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

if (!CHAT_ID || CHAT_ID === 'YOUR_CHAT_ID_HERE') {
  console.error('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TEST_CHAT_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

const bot = new TelegramBot(BOT_TOKEN, { polling: false });

async function testNotification() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    
    const testMessage = `üéÅ *–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ*\n\n` +
                       `üéØ *–ü—Ä–µ—Å–µ—Ç:* Spring Basket\n` +
                       `ü§ñ *–ú–æ–¥–µ–ª—å:* Ritual Goat\n` +
                       `üé® *–§–æ–Ω:* Spring\n` +
                       `üîç *–£–∑–æ—Ä:* Ritual\n\n` +
                       `üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å: *5* ‚Üí *6*\n` +
                       `üìä –†–∞–∑–Ω–∏—Ü–∞: *1*\n\n` +
                       `üéÅ [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–¥–∞—Ä–æ–∫](https://t.me/nft/SpringBasket-92541)\n` +
                       `üîó [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –Ω–∞ peek.tg](https://peek.tg/gifts?gift=Spring%20Basket&model=Ritual%20Goat&background=Spring&pattern=Ritual)\n\n` +
                       `‚è∞ ${new Date().toLocaleString('ru-RU')}`;

    await bot.sendMessage(CHAT_ID, testMessage, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error.message);
  }
}

testNotification();
